# app/handlers/topup_custom.py
import json
from aiogram import Router, F, types
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import LabeledPrice

router = Router()

class Topup(StatesGroup):
    wait_amount = State()

@router.message(F.text == "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
async def ask_amount(msg: types.Message, state: FSMContext):
    await msg.answer("‚úèÔ∏è –í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:")
    await state.set_state(Topup.wait_amount)

@router.message(Topup.wait_amount, F.text.regexp(r"^\d+$"))
async def send_invoice(msg: types.Message, state: FSMContext):
    amount = int(msg.text)
    await state.clear()

    await msg.bot.send_invoice(
        chat_id=msg.chat.id,
        title="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
        description=f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount} ‚≠ê",
        payload=json.dumps({"stars": amount}),
        currency="XTR",
        prices=[LabeledPrice(label="–ó–≤—ë–∑–¥—ã", amount=amount * 100)],
        provider_token=""
    )

@router.message(Topup.wait_amount)
async def invalid(msg: types.Message):
    await msg.answer("‚ö†Ô∏è –í–≤–µ–¥–∏ —Å—É–º–º—É —Ü–∏—Ñ—Ä–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä 150).")
